plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.8.10'
    id "org.jetbrains.kotlin.plugin.serialization" version "1.8.10"
    id 'maven-publish'
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

if (hasProperty('buildScan')) {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

static def determineVersion(String defaultVersion) {
    def envVersion = System.getenv("VERSION")
    return envVersion == null ? defaultVersion : envVersion
}

group = "dev.mikchan.mcnp"
version = determineVersion("0.0.1")

def localProperties = new Properties()
def propertiesFile = rootProject.file('local.properties')
if (propertiesFile.exists()) {
    localProperties.load(new FileInputStream(propertiesFile))
}

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }

    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }

    maven {
        name = 'jitpack'
        url = 'https://jitpack.io/'
    }
}

dependencies {
    //noinspection VulnerableLibrariesLocal
    compileOnly 'org.spigotmc:spigot-api:1.19.3-R0.1-SNAPSHOT'
    implementation "org.jetbrains.kotlin:kotlin-stdlib"

    implementation "io.ktor:ktor-server-core:2.2.3"
    implementation "io.ktor:ktor-server-netty:2.2.3"
    implementation 'dev.dejvokep:boosted-yaml-spigot:1.3'

    compileOnly 'com.github.NuVotifier.NuVotifier:nuvotifier-bukkit:2.7.2'
    compileOnly 'com.github.NuVotifier.NuVotifier:nuvotifier-api:2.7.2'
    compileOnly 'com.github.NuVotifier.NuVotifier:nuvotifier-common:2.7.2'

    implementation "org.bstats:bstats-bukkit:3.0.0"
    shadow "org.bstats:bstats-bukkit:3.0.0"

    implementation "org.bstats:bstats-base:3.0.0"
    shadow "org.bstats:bstats-base:3.0.0"
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }

    withSourcesJar()
    withJavadocJar()
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset "UTF-8"
    filesMatching("plugin.yml") {
        expand props
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

if (file("local.gradle").exists()) {
    apply from: "local.gradle"
}

shadowJar {
    archiveClassifier.set(null)

    dependencies {
        include(dependency('org.bstats:bstats-bukkit'))
        include(dependency('org.bstats:bstats-base'))
    }

    relocate "org.bstats", "dev.mikchan.mcnp.votereceiver.shadow.org.bstats"
}

/*
publishing {
    repositories {
        maven {
            name = "GitHub"
            url = "https://maven.pkg.github.com/MikChanNoPlugins/VK"
            credentials {
                username = localProperties['user'] ?: System.getenv("GITHUB_ACTOR")
                password = localProperties['key'] ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }

    publications {
        gpr(MavenPublication) {
            groupId = group
            artifactId = 'vk'

            artifact jar
            artifact javadocJar
            artifact sourcesJar
        }
    }
}
*/