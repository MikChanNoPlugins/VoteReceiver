plugins {
    id "java"
    id "org.jetbrains.kotlin.jvm" version "1.8.10"
    id "org.jetbrains.dokka" version "1.7.20"
    id "maven-publish"
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

if (hasProperty("buildScan")) {
    buildScan {
        termsOfServiceUrl = "https://gradle.com/terms-of-service"
        termsOfServiceAgree = "yes"
    }
}

compileJava.options.encoding = "UTF-8"
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

static def determineVersion(String defaultVersion) {
    def envVersion = System.getenv("VERSION")
    return envVersion == null ? defaultVersion : envVersion
}

group = "dev.mikchan.mcnp"
version = determineVersion("1.2.2")

def localProperties = new Properties()
def propertiesFile = rootProject.file("local.properties")
if (propertiesFile.exists()) {
    localProperties.load(new FileInputStream(propertiesFile))
}

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }

    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }

    maven {
        name = "jitpack"
        url = "https://jitpack.io/"
    }

    maven {
        name = "Ailis Maven Releases"
        url = "https://nexus.ailis.de/repository/maven-releases/de/ailis/pherialize/pherialize/"
    }
}

dependencies {
    //noinspection VulnerableLibrariesLocal
    compileOnly "org.spigotmc:spigot-api:1.19.3-R0.1-SNAPSHOT"
    compileOnly "net.md-5:bungeecord-api:1.19-R0.1-SNAPSHOT"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.8.10"

    implementation "io.ktor:ktor-server-core:2.2.4"
    implementation "io.ktor:ktor-server-netty:2.2.4"
    implementation "dev.dejvokep:boosted-yaml:1.3"
    implementation "com.xk72:pherialize:1.2.4"

    implementation "com.github.NuVotifier.NuVotifier:nuvotifier-bukkit:2.7.2"
    implementation "com.github.NuVotifier.NuVotifier:nuvotifier-bungeecord:2.7.2"
    implementation "com.github.NuVotifier.NuVotifier:nuvotifier-api:2.7.2"
    implementation "com.github.NuVotifier.NuVotifier:nuvotifier-common:2.7.2"

    shadow "org.bstats:bstats-bukkit:3.0.0"
}

def targetJavaVersion = 11
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }

    withSourcesJar()
    withJavadocJar()
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset "UTF-8"

    filesMatching(["plugin.yml", "bungee.yml"]) {
        expand props
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = 11
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = 11
    }
}

if (file("local.gradle").exists()) {
    apply from: "local.gradle"
}

dokkaHtml {
    outputDirectory.set(file("${buildDir}/dokka"))
}

javadocJar {
    archiveClassifier.set("javadoc")
    dependsOn("dokkaHtml")
    from("$buildDir/dokka")
}

shadowJar {
    archiveClassifier.set(null)

    project.configurations.shadow.canBeResolved = true
    configurations = [project.configurations.shadow]
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

task relocateShadowJar(type: ConfigureShadowRelocation) {
    target = tasks.shadowJar
    prefix = "dev.mikchan.mcnp.votereceiver.shadow"
}
tasks.shadowJar.dependsOn tasks.relocateShadowJar

publishing {
    repositories {
        maven {
            name = "GitHub"
            url = "https://maven.pkg.github.com/MikChanNoPlugins/VoteReceiver"
            credentials {
                username = localProperties["user"] ?: System.getenv("GITHUB_ACTOR")
                password = localProperties["key"] ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }

    publications {
        gpr(MavenPublication) {
            groupId = group
            artifactId = "vote-receiver"

            artifact jar
            artifact javadocJar
            artifact sourcesJar
        }
    }
}
